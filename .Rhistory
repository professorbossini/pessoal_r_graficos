a
#-5, -4, ..., 4, 5
f1 <- a + 5
f1
f2 <- (a ** 2) / 10 -a - 5
f2
f2
help(data)
help (data.frame)
help(df)
help(df)
help(head)
head(df)
#gerar um dataframe
df <- data.frame (a, f1, f2)
head(df)
head (df, 10)
head (df, -1)
head (df, -10)
head (df, -19)
#construindo o gráfico, ainda sem camadas
p <- ggplot (df, aes (x = a))
p
#doc da aes (ver colour, por exemplo)
help (aes)
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1, colour='f1'))
p
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1))
p
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1, color='red'))
p
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1, colour='red'))
p
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1, colour='f1'))
p
#curva referente à coluna f2
p <- p + geom_line (aes (y = f2, colour = 'f2'))
p
p <- NULL
p
#construindo o gráfico, ainda sem camadas
p <- ggplot (df, aes (x = a))
#construindo o gráfico, ainda sem camadas
p <- ggplot (df, aes (x = a))
p
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1, colour='f1'))
p
#curva referente à coluna f2
p <- p + geom_line (aes (y = f2, colour = 'f2'))
p
#apagar o gráfico da memória, se desejar
p <- NULL
#construindo o gráfico, ainda sem camadas
p <- ggplot (df, aes (x = a))
p
#pontos referentes à coluna f1
p <- p + geom_point (aes (y = f1, colour='fwawewaefw'))
p
p
#curva referente à coluna f2
p <- p + geom_line (aes (y = f2, colour = 'f2'))
p
#apagar o gráfico da memória, se desejar
p <- NULL
#construindo o gráfico, ainda sem camadas
p <- ggplot (df, aes (x = a))
p
#pontos referentes à coluna f1
#colour está sendo usado para escolher o título da legenda
p <- p + geom_point (aes (y = f1, colour='f1'))
p
#curva referente à coluna f2
p <- p + geom_line (aes (y = f2, colour = 'f2'))
p
#legenda e título
p <- p + labs (x = 'x', y = 'y', colour = 'Legenda:', title="Meu Teste")
p
#tema do gráfico
p <- p + theme_classic()
p
#outro tema
p <- p + theme_linedraw()
p
#outro tema
p <- p + theme_light()
p
#outro tema
p <- p + theme_dark()
p
#outro tema
p <- p + theme_void()
p
#outro tema
p <- p + theme_minimal()
p
#usando a função theme para alterar detalhes do gráfico
p <- p + theme (plot.title = element_text (hjust = 0.5))
p
#usando a função theme para alterar detalhes do gráfico
p <- p + theme (plot.title = element_text (hjust = 0.9))
p
#usando a função theme para alterar detalhes do gráfico
p <- p + theme (plot.title = element_text (hjust = 1.9))
p
#usando a função theme para alterar detalhes do gráfico
p <- p + theme (plot.title = element_text (hjust = 1))
p
#usando a função theme para alterar detalhes do gráfico
p <- p + theme (plot.title = element_text (hjust = 0.5))
p
#vendo as layers
p$layers
#trocando cor
p <- p + theme (axis.title = element_text (color = 'blue'))
p
#caixa na legenda
p <- p + theme (legend.background = element_rect (linetype = 'solid'))
p
p$theme
p$theme <- NULL
p
#tema do gráfico
p <- p + theme_classic()
#outro tema
p <- p + theme_linedraw()
#outro tema
p <- p + theme_light()
#outro tema
p <- p + theme_dark()
#outro tema
p <- p + theme_void()
#outro tema
p <- p + theme_minimal()
p
#usando a função theme para alterar detalhes do gráfico
#hjust: ajuste horizontal: 0.5 centraliza, testar valores de 0 a 1
p <- p + theme (plot.title = element_text (hjust = 0.5))
p
#trocando cor dos nomes dos eixos
p <- p + theme (axis.title = element_text (color = 'blue'))
p
#caixa na legenda
p <- p + theme (legend.background = element_rect (linetype = 'solid'))
p
p <- p + theme (legend.position = 'bottom')
p
#legenda em posição qualquer
p <- p + theme (legend.position = c(0.5, 0.5))
p
#legenda em posição qualquer
p <- p + theme (legend.position = c(0.85, 0.5))
p
#novos testes com a base faithful
?faithful
#novos testes com a base faithful
help(faithful)
?faithful
?head
#exibindo a documentação ? e help são a mesma coisa
?pressure
help(pressure)
#novos testes com a base faithful
?faithful
#ver a base
faithful
#ver a base
faithful
ggplot (faithful, aes ( x = waiting, y = eruptions)) + geom_point()
#correlação
cor (faithful)
#curva de tendência
ggplot (faithful, aes (x = waiting, y = eruptions)) + geom_point() + geom_smooth()
#########################################
#testes com a base airquality
?airquality
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0.5)
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0.5)
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0.5) +
scale_color_continuous( (low = "blue", high = "red"))
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0.5) +
scale_color_continuous(low = "blue", high = "red")
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 1) +
scale_color_continuous(low = "blue", high = "red")
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp)) +
scale_color_continuous(low = "blue", high = "red")
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0.5) +
scale_color_continuous(low = "blue", high = "red")
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0) +
scale_color_continuous(low = "blue", high = "red")
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 1) +
scale_color_continuous(low = "blue", high = "red")
#gráfico com pontos e escala de cor contínua
ggplot (airquality, aes (x = Temp, y = Month)) +
geom_point( aes (colour = Temp), alpha = 0.2) +
scale_color_continuous(low = "blue", high = "red")
#ver doc
?faithful
?airquality
#box-plot
?aes
ggplot (airquality, aes (x = Month, y = Temp)) +
geom_boxplot()
ggplot (airquality, aes (x = Month, y = Temp, group = Temp)) +
geom_boxplot()
ggplot (airquality, aes (x = Month, y = Temp, group = Month)) +
geom_boxplot()
#sem agrupar, ou seja, boxplot único para todos os dados
ggplot (airquality, aes (x = Month, y = Temp)) +
geom_boxplot()
#Group: cada caixinha se refere a um mês
#box-plot
ggplot (airquality, aes (x = Month, y = Temp, group = Month)) +
geom_boxplot()
?month
?month.abb
ny$Month <- factor (
month.abb[ny$Month],
levels = month.abb,
ordered = TRUE
)
ny <- airquality
ny$Month <- factor (
month.abb[ny$Month],
levels = month.abb,
ordered = TRUE
)
ggplot (ny, aes (x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot()
ggplot (ny, aes (x = Month, y = Temp, group = Month)) +
geom_boxplot()
ggplot (ny, aes (x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot()
##########################################################
#função facet_wrap() para dividir um gráfico em subgráficos
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ráfico em subgráficos
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap(~ Windy)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap(Windy)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap(ny$Windy)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap( ~ Windy)
##########################################################
#função facet_wrap() para dividir um gráfico em subgráficos
?~
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
##########################################################
#função facet_wrap() para dividir um gráfico em subgráficos
help('~')
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap(ny ~ Windy)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap( ~ Windy)
help('~')
lhs
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot()
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ Windy)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ 2)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ Windy)
#operador til representa uma fórmula
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ Temp)
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ Month)
por exemplo
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ Ozone)
por exemplo
ny$Windy <- ifelse (ny$Wind > 10, "Windy", "Not Windy")
ggplot (ny, aes ( x = Month, y = Temp, group = Month, fill = Month)) +
geom_boxplot() + facet_wrap (~ Windy)
##########################################################
#exemplo histograma
ggplot (ny, aes (x = Temp)) + geom_histogram()
#10 bins
ggplot (ny, aes (x = Temp)) + geom_histogram()
#10 bins
ggplot (ny, aes (x = Temp)) + geom_histogram(bins = 10)
#10 bins
ggplot (ny, aes (x = Temp)) + geom_histogram(bins = binwidth)
#10 bins
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 10)
#10 bins
ggplot (ny, aes (x = Temp)) + geom_histogram(bins = 10)
#definição da largura dos bins, o número de bins é calculado em função disso
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5)
#definição da largura dos bins, o número de bins é calculado em função disso
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 0)
#definição da largura dos bins, o número de bins é calculado em função disso
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5)
#definição da largura dos bins, o número de bins é calculado em função disso
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 0)
ny
#definição da largura dos bins, o número de bins é calculado em função disso
?geom_histogram
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 100)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 12)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 50)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 75)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 76)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 77)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7, boundary = 77)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7, boundary = 0.01)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 7, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 3)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 100)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 100)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 1000)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 40)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 00)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 00)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, center = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, center = 63)
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 5, center = 80)
#center: centraliza um dos bins naquele ponto
#se o valor passado estiver fora do intervalo, há um deslocamento considerando
# a largura dos bins
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 1, center = 0)
#aqui haveria um bin centralizado em 0, assim, centralizamos nos inteiros
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 1, center = 0)
ny
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 1, center = 0)
ny
#aqui haveria um bin centralizado em 0, assim, centralizamos nos inteiros
ggplot (ny, aes (x = Temp)) + geom_histogram(binwidth = 1, center = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 100)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 2)
ggplot (a) + geom_histogram(binwidth = 1)
ggplot (data.frame(c)) + geom_histogram(binwidth = 1)
ggplot (data.frame([1])) + geom_histogram(binwidth = 1)
ggplot (data.frame(1)) + geom_histogram(binwidth = 1)
ggplot (data.frame(1), aes (x = a)) + geom_histogram(binwidth = 1)
ggplot (data.frame(1), aes (x = x)) + geom_histogram(binwidth = 1)
ggplot (data.frame(c), aes (x = c)) + geom_histogram(binwidth = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 3)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 100)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 100)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 2)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 10)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 11)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 10, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0.5)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 1)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0)
ggplot (ny, aes (x = Temp)) + geom_histogram (binwidth = 1, boundary = 0)
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5)
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 0)
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5)
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 0)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 1)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 0)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 1)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 2)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 3)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 4)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5, boundary = 5)
#fill para diferenciar por cores
ggplot (ny, aes (x = Temp)) +
geom_histogram (aes (fill = Windy), binwidth = 5)
##########################################################
#densidade
ggplot (ny, aes (x = Temp)) + geom_density()
#colour para gerar uma curva para cada valor da variável especificada
ggplot (ny, aes (x = Temp, colour = Windy)) + geom_density()
#com preenchimento e transparência
ggplot (ny, aes (x = Temp, colour = Windy, fill = Windy)) + geom_density(alpha = 0.4)
#com preenchimento e transparência
ggplot (ny, aes (x = Temp, colour = Windy, fill = Windy)) + geom_density(alpha = 0.2)
##########################################################
#base Titanic
?Titanic
#crew significa tripulação
#variaveis
#class: 1, 2, 3, crew
#sex: Male, Female
#Age: Child, Adult
#Survived No, Yes
?as
tdf
#tdf: titanic_data_frame
tdf <- as.data.frame(Titanic)
tdf
a <- as.data.frame(c (1, 2))
a
a <- as.data.frame(c (1, 2), row.names = "d")
a <- as.data.frame(c (1, 2), nm = "a")
a <- as.data.frame(c (1, 2), nm = "a")
a
a <- as.data.frame(c (1, 2), nm = "ates")
a
tdf
ggplot (tdf, aes (x = Class, weight = Freq)) + geom_bar()
?aes
ggplot (tdf, aes (x = Class)) + geom_bar()
ggplot (tdf, aes (x = Class, weight = Freq)) + geom_bar()
ggplot (tdf, aes (x = Class, weight = Survived)) + geom_bar()
ggplot (tdf, aes (x = Class, weight = Survived)) + geom_bar()
Freq
ggplot (tdf, aes (x = Class, weight = Freq)) + geom_bar()
ggplot (tdf, aes (x = Class, weight = Freq, fill = Sex)) + geom-bar()
ggplot (tdf, aes (x = Class, weight = Freq, fill = Sex)) + geom_bar()
ggplot (tdf, aes (x = Class, weight = Freq, fill = Sex)) + geom_bar (position = position_dodge())
ggplot (tdf, aes (x = Class, weight = Freq, fill = Sex)) +
geom_bar (position = position_fill())
##########################################################
?AirPassengers
AirPassengers
#gerando um gráfico de linhas
Year <- as.numeric (time (AirPassengers))
Year
?time
time (AirPassengers
time (AirPassengers)
time (AirPassengers)
time (AirPassengers)
